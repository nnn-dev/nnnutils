.TH CHECK.SH 1 LOCAL

.SH NAME
check.sh - vérifie et répare des modules

.SH SYNOPSIS
check.sh 
.I [options]
.B -l

check.sh
.I [options] 
.B [-n] 
.I <module>

.SH DESCRIPTION
.B check.sh
peut être utilisé pour vérifier (et réparer) les modules d'une application.

Le but de réparer un module est de corriger les problèmes courants qui empêchent le fonctionnement de l'application (par exemple avec la vérification des permissions de fichiers).

Avec ce script, vous pouvez gérer facilement une application utilisant de nombreux modules.

.SH OPTIONS
.TP 2
-l
affiche la liste des modules.

.TP
-n 
vérifie seulement, mais ne répare pas.

.TP
-M <répertoire>
indique l'emplacement des fichiers de modules (voir MODULES).
défaut : check-modules

.TP
-E <fichier>
indique l'emplacement du fichier d'environnement (voir MODULES).
défaut :
.I aucun

.TP
-A nosys
l'action est effectuée pour tous les modules qui n'ont pas le préfixe 
.B sys.
A utiliser à la place de <module>.

.TP
-A allsys
l'action est effectuée sur tous les modules.
A utiliser à la place de <module>.

.TP
-v
affiche la version du programme
.B backup.sh.

.TP
-?
affiche le message d'aide.

.SH COMMANDS
L'action par défaut est de réparer un module.
 
Utilisez l'option
.I -n 
pour vérifier un module.

Utilisez l'option
.I -l 
pour lister les différents modules disponibles.

.SH MODULES
Un module correspond à un fichier qui décrit comment exporter ou importer les données d'un composant.
C'est un fichier script avec un format particulier (voir ci-dessous).
Ce fichier contient des fonctions shell et une description.
Un fichier d'environnement peut être utilisé pour conserver des paramètres ou des fonctions globales. 


.SS Fichier d'environnement
C'est un script optionnel lancé dans le shell courant (avec la commande 
.B . (point) 
). Ce fichier doit être indiqué avec l'option 
.B -E 

.SS Nom du fichier
Le fichier module doit présent dans un répertoire (par défaut 
.I check-modules
) en suivant un de ces formats :
.I <nombre>_<nom>
ou
.I <nombre>_sys_<nom>
où 
.TP 2
<nombre>
est un nombre. Il indique l'ordre d'exportation du module quand l'option 
.B -A 
est utilisée.
.TP
<nom>
est le nom que vous voulez.
.TP
sys
est utilisé pour indiquer un module système.

.SS Modules Systèmes
Un module système représente un composant utilisé globalement sur la machine, comme un 
.I serveur ldap
ou un 
.I serveur dns 
c'est à dire quand l'arrêt du composant a un impact sur l'ensemble de la machine et des autres applications.


Ci-dessous, un modèle pour les fichiers :

 #!/bin/sh

 # ################################################# #
 # NNNA description décrivez ici votre module        #
 # NNNA author      vous                             #
 # NNNA version     version du script                #
 # ################################################# #

 fn_check()
 {
  #verifie utilisateur et groupe
  #verie permissions
  return 0 #ok
 }

 fn_repair()
 {
   #change utilisateur et groupe
   #change droit fichier
   return 0 #ok
 }


.SH EXEMPLE
Par exemple, si votre application est composé d'un site web et d'une base de données, vous pouvez créer deux modules : 
.TP 2
un pour le site web,
.TP
un autre pour la base de données.


.SS Site web
Supposons que le site web soit hébergé dans un
.I virtualhost 
sur un Apache mutualisé. 
L'Apache est donc un composant système.
Nous allons créer le fichier 
.B check-modules/20_sys_apache.
Ci-dessous son contenu:

 #!/bin/sh

 # ################################################# #
 # NNNA description Serveur web apache               #
 # NNNA author      Auteur de l'exemple              #
 # NNNA version     version 1.0                      #
 # ################################################# #
 
 fn_check()
 {
  ret=0
  #on vérifie les propriétaires des fichiers
  txt=$(find /var/nnnadminexample/mywebsite -not -user www-data -printf "%P's user must be www-data\n" | sed -e '1,$s'"|^'s|mywebsite's|g")
  if [ -n "$txt" ]; then
   echo "$txt"
   ret=1
  fi
  #dans cet exemple, les fichiers ne doivent pas être écrites
  for i in u g o ; do
   txt=$(find /var/nnnadminexample/mywebsite -perm -$i=w -printf "%P must not be writable\n" | sed -e '1,$s'"|^ must|mywebsite must|g")
   if [ -n "$txt" ]; then
    echo "$txt"
    ret=1
   fi
  done
  return $ret #0=OK, other=NOK
 }
 
 fn_repair()
 {
  chown -R www-data /var/nnnadminexample/mywebsite || return 1
  chmod -R ugo-w /var/nnnadminexample/mywebsite || return 1
  return 0 #0=OK, other=NOK
 }


.SS Base de données
L'instance de la base de données est lancée en mode autonome mais doit être lancée avant l'Apache.
Nous allons créer le fichier 
.B check-modules/10_database.
Ci-dessous son contenu

 #!/bin/sh
 
 # ################################################# #
 # NNNA description Base de données du site web      #
 # NNNA author      Auteur de l'exemple              #
 # NNNA version     version 1.0                      #
 # ################################################# #
 
 PG_DIR=/usr/lib/postgresql/9.1/bin
 PGDATA=/var/nnnadminexample/mydatabase
 
 fn_check()
 {
  ret=0
  #on regarde les permissions des dossiers
  txt=$(find $PGDATA -type d -not -perm 0700 -printf "%P's rights must are 0700\n" | sed -e '1,$s'"|^'s|.'s|g")
  if [ -n "$txt" ]; then
   echo "$txt"
   ret=1
  fi
  #on regarde les permissions des fichiers
  txt=$(find $PGDATA -not -perm 0600 -not -type d -printf "%P's rights must are 0600\n" | sed -e '1,$s'"|^'s|.'s|g")
  if [ -n "$txt" ]; then
   echo "$txt"
   ret=1
  fi
  #on regarde le propriétaire
  txt=$(find $PGDATA -not -user postgres -printf "%P's user must be postgres\n" | sed -e '1,$s'"|^'s|.'s|g")
  if [ -n "$txt" ]; then
   echo "$txt"
   ret=1
  fi
  return $ret #0=OK, other=NOK
 } 
 
 fn_repair()
 {
  #si le check a remonté une erreur, on reinitialise les droits
  chown -R postgres $PGDATA || return 1
  find $PGDATA -type d -exec chmod 0700 {} \; || return 1
  find $PGDATA -not -type d -exec chmod 0600 {} \; || return 1
  return 0 #ok
 }


.SS Répare seulement la base de données
check.sh database

.SS Répare tous les modules
check.sh -A allsys

.SS Vérifie seulement mais ne répare pas le module apache
check.sh -n apache

.SH AUTHOR
3Zen

.SH SEE ALSO
.BR admin.sh(1),
.BR backup.sh(1),
.BR launch.sh(1)
